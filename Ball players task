# The code defines a class 'BallPlayer' to represent a ball player, and it also includes three functions: 'most_goals', 'most_points', and 'least_minutes'
# The script creates instances of BallPlayer for a team and then call these functions to find the player with the most goals, the player with the most points (goals + passes), and the player with the least minutes played.

class BallPlayer:
    def __init__(self, name: str, number: int, goals: int, passes: int, minutes: int):
        self.name = name
        self.number = number
        self.goals = goals
        self.passes = passes
        self.minutes = minutes

    def __str__(self):
        return (f'BallPlayer(name={self.name}, number={self.number}, '
            f'goals={self.goals}, passes={self.passes}, minutes={self.minutes})')


def most_goals(players: list):

    def by_amount_of_goals(player):
        return player.goals
    
    most_scored = sorted(players, key=by_amount_of_goals, reverse=True)
    return most_scored[0].name

def most_points(players: list):

    def by_most_points(player):
        points = player.goals + player.passes
        return points
    
    most_points = sorted(players, key=by_most_points, reverse=True)
    return (most_points[0].name, most_points[0].number)

def least_minutes(players: list):

    def by_least_minutes(player):
        return player.minutes
    
    least_minutes = sorted(players, key=by_least_minutes)
    return least_minutes[0]

if __name__ == "__main__":

    player1 = BallPlayer("Archie Bonkers", 13, 5, 12, 46)
    player2 = BallPlayer("Speedy Tickets", 7, 2, 26, 55)
    player3 = BallPlayer("Cruella De Hill", 9, 1, 32, 26)
    player4 = BallPlayer("Devilled Tasmanian", 12, 1, 11, 41)
    player5 = BallPlayer("Donald Quack", 4, 3, 9, 12)

    team = [player1, player2, player3, player4, player5]
    print(most_goals(team))
    print(most_points(team))
    print(least_minutes(team))
